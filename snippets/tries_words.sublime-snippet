<snippet>
	<content><![CDATA[
struct Node {
	Node* child[MAX_SIZE];
	bool is_eow;
	int count;
	Node() {
		for (int i = 0; i < MAX_SIZE; i++) {
			child[i] = nullptr;
		}
		is_eow = false;
		count = 0;
	}
};
int getIndex(char c) {
	return c - 'a';
}
class Trie {
public:
	Trie(Node* root) {
		d_root = root;
	}
	void insert(const string& s) {
		auto curr = d_root;
		for (auto c : s) {
			int index = getIndex(c);
			if (curr->child[index] == nullptr) {
				curr->child[index] = new Node();
			}
			curr->child[index]->count++;
			curr = curr->child[index];
		}
		curr->is_eow = true;
	}
	bool isPresent(const string& s) {
		auto curr = d_root;
		for (auto c : s) {
			int index = getIndex(c);
			if (curr->child[index] == nullptr) {
				return false;
			}
			curr = curr->child[index];
		}
		return curr->is_eow;
	}
	Node* getRoot() {
		return d_root;
	}

private:
	Node* d_root;
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>sublime_triesclass</tabTrigger>	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
