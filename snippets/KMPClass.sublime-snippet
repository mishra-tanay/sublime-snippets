<snippet>
	<content><![CDATA[
class KMP {
  public:
	KMP(const string& pattern) : d_pattern(pattern) {
		len = d_pattern.length();
		lps.resize(len, 0);
		buildLPS();
	}
	vector<int> countMatches(const string& text) {
		vector<int> result;
		int j = 0;
		for (int i = 0; i < text.length();) {
			while (j > 0 && d_pattern[j] != text[i]) {
				j = lps[j - 1];
			}
			if (text[i] == d_pattern[j]) {
				j++;
			}
			if (j == len) {
				result.push_back(i - len + 1);
				j = lps[j - 1];
			}
			i++;
		}
		return result;
	}
  private:
	void  buildLPS() {
		int n = (int)d_pattern.length();
		for (int i = 1; i < n; i++) {
			int j = lps[i - 1];
			while (j > 0 && d_pattern[i] != d_pattern[j])
				j = lps[j - 1];
			if (d_pattern[i] == d_pattern[j])
				j++;
			lps[i] = j;
		}
	}

	string d_pattern;
	int len;
	vector<int> lps;
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>sublime_kmp</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
