<snippet>
	<content><![CDATA[
int sparse[MAXN][LOGN];
int arr[MAXN];
ll logarray[MAXN];
int n;
ll func(ll a, ll b){
    return min(a,b);
}
void build_sparse(){
    int max_bit;
    logarray[1]=0;

    for(int i=2;i<=n;i++){
        logarray[i]=logarray[i/2]+1;
    }
    max_bit=logarray[n]+1;
    for(int i=0;i<n;i++){
        sparse[i][0]=arr[i];
    }
    for(int j=1;j<=max_bit;j++){
        for(int i=0;i + (1<<j) <=n; i++) {
            sparse[i][j]=func(sparse[i][j-1],sparse[i+(1<<(j-1))][j-1]);
        }
    }
}
ll query_sparse(int l , int r)
{
    int ne=r-l+1;
    int j=logarray[ne];
   
    ll ans=func(sparse[l][j],sparse[r-(1<<j)+1][j]);
    return ans;
}

build_sparse();
query_sparse(i,j);
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
<tabTrigger>sublime_sparse</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
