<snippet>
	<content><![CDATA[
class SubtreeQuery {
  public:
	SubtreeQuery(vector<vector<int>>& adj, vector<ll>& values) {
		_timer = 0;
		d_adj = adj;
		n = d_adj.size();
		in.resize(n);
		out.resize(n);
		d_euler.push_back(-1);
		calculateEuler(1, -1);
		for (int i = 1; i < d_euler.size(); i++) {
			d_euler[i] = values[d_euler[i]];
 
		}
		segtree = new SegmentTreeLazy(d_euler);
	}
	ll queryNode(int node) {
		return segtree->query(in[node]);
	}
	ll querySubTree(int node) {
		return segtree->query(in[node], out[node]);
	}
	void updateNode(int node, ll val) {
		segtree->update(in[node], val);
		segtree->update(out[node], val);
	}
	void updateSubtree(int node, ll val) {
		segtree->update(in[node], out[node], val);
	}
  private:
	void calculateEuler(int curr, int par) {
		in[curr] = ++_timer;
		d_euler.push_back(curr);
		for (auto it : d_adj[curr]) {
			if (it != par) {
				calculateEuler(it, curr);
			}
		}
		out[curr] = ++_timer;
		d_euler.push_back(curr);
	}
	SegmentTreeLazy* segtree = nullptr;
	int n;
	vector<vector<int>> d_adj;
	vector<ll> d_euler;
	vector<ll> in;
	vector <ll> out;
	int _timer;
};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
<tabTrigger>sublime_subtreequeries</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
